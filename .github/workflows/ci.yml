name: vitest's CI
run-name: ${{ github.actor }} is CI work

on:
    push:
        paths-ignore:
            - "*.md"
        branches-ignore:
            - main

jobs:
    laravel-tests:
        runs-on: ubuntu-latest

        steps:
            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.2"

            - uses: actions/checkout@v4

            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.example', '.env');"

            - name: cache vendor
              id: cache
              uses: actions/cache@v3
              with:
                  path: ./vendor
                  key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-composer-

            - name: composer install
              if: steps.cache.outputs.cache-hit != 'true'
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

            - name: composer dump autoload
              run: composer dump-autoload

            - name: Generate key
              run: php artisan key:generate

            - name: Directory Permissions
              run: chmod -R 777 storage bootstrap/cache

            - name: cache node_modules
              id: cache_node
              uses: actions/cache@v3
              with:
                  path: ./node_modules
                  key: ${{ runner.os }}-package-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-package-

            - name: npm install
              if: steps.cache.outputs.cache-hit != 'true'
              run: |
                  npm ci
                  npm run build

            - name: Create Database
              run: |
                  mkdir -p database
                  touch database/database.sqlite

            - name: Execute tests (Unit and Feature tests) via PHPUnit
              env:
                  DB_CONNECTION: sqlite
                  DB_DATABASE: database/database.sqlite
              run: vendor/bin/phpunit
